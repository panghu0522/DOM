{"version":3,"sources":["DOM.js"],"names":["window","dom","create","string","container","document","createElement","innerHTML","trim","content","firstChild","after","node","newNode","parentNode","insertBefore","nextSibling","before","append","parent","appendChild","wrap","newParent","after2","before2","remove","removeChild","empty","array","x","push","attr","name","value","arguments","length","setAttribute","getAttribute","text","textContent","innerText","html","style","Object","object","key","class","add","className","classList","has","contains","on","eventName","fn","addEventListener","off","removeEventListener","find","selector","scope","querySelectorAll","children","siblings","Array","from","filter","n","next","nodeType","previous","previousSibling","each","nodeList","i","call","index","list"],"mappings":"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","file":"DOM.e0cef7ef.map","sourceRoot":"..","sourcesContent":["window.dom = {\n  create(string){ // 创建节点\n    const container = document.createElement(\"template\") \n  // 使用 \"template\"作为容器，可以容纳任意元素\n    container.innerHTML = string.trim() // trim 去掉字符串的两端空格\n    return container.content.firstChild\n  },\n  after(node, newNode){ // 新增弟弟节点\n    node.parentNode.insertBefore(newNode, node.nextSibling)\n  }, \n  before(node, newNode){ // 新增哥哥节点\n    node.parentNode.insertBefore(newNode, node)\n  },\n  append(parent, newNode){ // 新增子节点\n    parent.appendChild(newNode)\n  },\n  wrap(node, newParent){ // 新增父节点\n    dom.before(node, newParent) \n    dom.append(newParent, node) \n  },\n   after2(node, newNode){ // 新增弟弟节点\n    node.after(node, newNode)\n  }, \n   before2(node, newNode){ // 新增哥哥节点\n    node.after(newNode, node)\n  },\n  remove(node){//用于删除节点 \n    node.parentNode.removeChild(node)\n    return node\n  },\n  empty(node) {//用于删除后代\n    // const {childNodes} = node 等价于const childNodes = node.childNodes\n    const array = []\n    let x = node.firstChild\n    while (x) {\n        array.push(dom.remove(node.firstChild))\n        x = node.firstChild\n    }\n    return array\n  },\n  attr(node,name,value){//重载：传不同个数的参数，执行不同的代码\n// 用于读写属性 \n      if (arguments.length === 3) {\n//\n         node.setAttribute(name,value) \n      }else if (arguments.length ===2) {\n//\n          return node.getAttribute(name)\n      }\n  },\n  text(node,string){//适配\n      if (arguments.length ===2) {//修改节点文本内容\n          if (`innerText` in node) {\n                node.innerHTML = string //ie\n            }else{\n                node.textContent = string// firefox ，chrome\n            }\n      }else if (arguments.length ===1) {\n         if (`innerText` in node) {\n                return node.innerText \n            }else{\n                return node.textContent \n            } \n      } \n  },\n  html(node,string){// 用于读写HTML内容 \n      if (arguments.length === 2) {\n          node.innerHTML = string\n      }else if(arguments.length === 1){\n          return node.innerHTML\n      }\n  },\n  style(node,name,value){ // 3种调用形式\n    // 用于读写style    \n      if (arguments.length===3) {\n    //dom.style(div,'color',red )设置一个属性\n        node.style[name]=value  \n      }else if (arguments.length===2) {\n          if (typeof name==='string') {\n    //dom.style(div,'color') 读一个属性      \n              return node.style[name]\n          }else if (name instanceof Object) {\n    //dom.style(div,{color:red})\n              const object =name\n              for(let key in object){\n                  node.style[key]=object[key]\n                }    \n            } \n        }\n  },\n  class:{\n      add(node,className){// 用于添加 \n          node.classList.add(className)\n      },\n      remove(node,className){// 用于删除\n          node.classList.remove(className)\n      },\n      has(node,className){\n          return node.classList.contains(className)\n      }\n  },\n  on(node,eventName,fn){// 用于添加事件监听 \n      node.addEventListener(eventName,fn)\n  },\n  off(node,eventName,fn){// 用于删除事件监听\n      node.removeEventListener(eventName,fn)\n  },\n  find(selector,scope){// 用于获取标签或标签们\n      return(scope||document).querySelectorAll(selector)\n  },\n  parent(node){ // 用于获取父元素\n      return node.parentNode\n  },\n  children(node){ // 用于获取子元素\n      return node.children\n  },\n  siblings(node){ // 用于获取兄弟姐妹元素（除了自的其他元素）\n      return Array.from(node.parentNode.children).filter(n=>n!==node)\n  },\n  next(node){// 用于获取弟弟\n      let x =node.nextSibling\n      while(x && x.nodeType===3){\n          x=x.nextSibling\n      }\n      return x\n  },\n  previous(node){// 用于获取哥哥\n      let x = node.previousSibling\n      while(x && x.nodeType===3){\n          x=x.previousSibling\n      }\n      return x\n  },\n  each(nodeList,fn){// 查看所有节点\n      for(let i=0;i<nodeList.length;i++){\n          fn.call(null,nodeList[i])\n      }\n  },\n  index(node){ // 用于获取排行老几\n      const list=dom.children(node.parentNode)\n      let i\n      for ( i = 0;i<list.length;i++){\n          if (list[i]===node) {\n              break\n          }\n      }\n      return i\n  }\n}\n\n\n "]}